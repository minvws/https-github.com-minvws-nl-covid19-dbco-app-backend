services:
    # Redis Sluice Persistent
    redis-sp:
        build:
            context: ../services
            dockerfile: redis/Dockerfile
        environment:
            REDIS_USERNAME: ${REDIS_SP_USERNAME}
            REDIS_PASSWORD: ${REDIS_SP_PASSWORD}

    # Redis Health Authority Volatile
    redis-hav:
        build:
            context: ../services
            dockerfile: redis/Dockerfile
        environment:
            REDIS_USERNAME: ${REDIS_HAV_USERNAME}
            REDIS_PASSWORD: ${REDIS_HAV_PASSWORD}

    # Redis Health Authority Persistent
    redis-hap:
        build:
            context: ../services
            dockerfile: redis/Dockerfile
        environment:
            REDIS_USERNAME: ${REDIS_HAP_USERNAME}
            REDIS_PASSWORD: ${REDIS_HAP_PASSWORD}

    mysql:
        image: mysql/mysql-server:8.0.27
        volumes:
            - mysql-data:/var/lib/mysql
        environment:
            MYSQL_DATABASE: portal
            MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-mysql}
            MYSQL_ROOT_HOST: "%"
        command: ["--max_connections=2000"]

    rabbitmq:
        image: rabbitmq:3.9.11-management
        environment:
            RABBITMQ_NODE_PORT: ${RABBITMQ_PORT:-5672}

    portal:
        build:
            context: ../services
            dockerfile: portal/Dockerfile
        environment:
            XDEBUG_CLIENT_HOST: ${XDEBUG_CLIENT_HOST:-localhost}
            XDEBUG_MODE: ${XDEBUG_MODE:-debug}
            XDEBUG_CONFIG: ${XDEBUG_CONFIG:-client_host=localhost}
            SECURITY_MODULE_TYPE: fake
        extra_hosts:
            - "host.docker.internal:host-gateway"
        volumes:
            - ../services/portal/assets/cs_pkcs11_R2.cfg:/etc/utimaco/cs_pkcs11_R2.cfg
            - ./../auth.json:/root/.composer/auth.json:ro

    default-worker:
        build:
            context: ../services
            dockerfile: portal/Dockerfile
        restart: on-failure
        environment:
            - PHP_OPCACHE_VALIDATE_TIMESTAMPS=1

    test-result-worker:
        build:
            context: ../services
            dockerfile: test-result-worker/Dockerfile
        restart: on-failure
        environment:
            APP_KEY: ${PORTAL_APP_KEY}
            APP_TYPE: test-result-worker
            APP_ENV: ${APP_ENV:-development}
            APP_ENV_NAME: ${APP_ENV:-training}
            APP_DEBUG: ${DEBUG:-0}
            INDEX_SALT: ${INDEX_SALT}
            DB_CONNECTION: mysql
            DB_HOST: mysql
            DB_DATABASE: portal
            DB_USERNAME: ${PORTAL_DB_USERNAME:-portal}
            DB_PASSWORD: ${PORTAL_DB_PASSWORD}
            QUEUE_CONNECTION: ${PORTAL_QUEUE_CONNECTION:-redis}
            REDIS_HOST: redis-hap
            REDIS_PORT: 6379
            REDIS_USERNAME: ${REDIS_HAP_USERNAME}
            REDIS_PASSWORD: ${REDIS_HAP_PASSWORD}
            REDIS_HSM_HOST: redis-hav
            REDIS_HSM_USERNAME: ${REDIS_HAV_USERNAME}
            REDIS_HSM_PASSWORD: ${REDIS_HAV_PASSWORD}
            MAIL_MAILER: smtp_bcomail

    gateway:
        build:
            context: ../services
            dockerfile: gateway/Dockerfile
        volumes:
            - ./../auth.json:/root/.composer/auth.json:ro

    sftp:
        image: atmoz/sftp
        command: sftp:sftp:1001

#!/bin/bash
BASE_PATH=$(dirname $0)/..
DOCKER_COMPOSE=$(dirname $0)/docker-compose-dev

. $BASE_PATH/.env

echo "=====[ SETUP CONTAINERS ]======================="
$DOCKER_COMPOSE up -d --remove-orphans

if [ $DATABASE_TYPE = "mysql" ]; then
  echo
  echo "=====[ SETUP MYSQL DATABASE ]========================="
  echo "Waiting for MySQL to launch on ${MYSQL_PORT:-3306}..."
  while ! nc -z localhost ${MYSQL_PORT:-3306}; do
    sleep 0.5
  done
  $DOCKER_COMPOSE run --rm mysqlclient -e "CREATE USER 'portal'@'%' IDENTIFIED BY '$PORTAL_DB_PASSWORD'"
  $DOCKER_COMPOSE run --rm mysqlclient -e "CREATE USER 'healthauthority_api'@'%' IDENTIFIED BY '$HEALTHAUTHORITY_API_DB_PASSWORD'"
  $DOCKER_COMPOSE run --rm mysqlclient < $BASE_PATH/install/mysql/permissions.sql
fi

if [ $DATABASE_TYPE = "postgres" ]; then
  echo
  echo "=====[ SETUP POSTGRES DATABASE ]========================="
  echo "Waiting for PostgreSQL to launch on ${POSTGRES_PORT:-5432}..."
  while ! nc -z localhost ${POSTGRES_PORT:-5432}; do
    sleep 0.5
  done
  $DOCKER_COMPOSE run --rm psql -c "CREATE USER portal PASSWORD '$PORTAL_DB_PASSWORD'"
  $DOCKER_COMPOSE run --rm psql -c "CREATE USER healthauthority_api PASSWORD '$HEALTHAUTHORITY_API_DB_PASSWORD'"
  $DOCKER_COMPOSE run --rm psql < $BASE_PATH/install/postgres/permissions.sql
fi

if [ $DATABASE_TYPE = "oracle" ]; then
  echo
  echo "=====[ SETUP ORACLE DATABASE ]========================="
  echo "Waiting for Oracle to launch on ${ORACLE_PORT:-1521}..."
  while ! echo "SELECT 1 FROM dual" | $DOCKER_COMPOSE run --rm sqlplus > /dev/null 2>&1; do
    sleep 1
  done

  echo "CREATE USER healthauthority_api IDENTIFIED BY \"$HEALTHAUTHORITY_API_DB_PASSWORD\";" | $DOCKER_COMPOSE run --rm sqlplus
  echo "CREATE USER portal IDENTIFIED BY \"$PORTAL_DB_PASSWORD\";" | $DOCKER_COMPOSE run --rm sqlplus
  $DOCKER_COMPOSE run --rm sqlplus < $BASE_PATH/install/oracle/permissions.sql
fi

$BASE_PATH/bin/update-dev

echo
echo "=====[ SEED PORTAL ]====="
$DOCKER_COMPOSE run --rm --entrypoint php portal artisan db:seed

echo
echo "=====[ CREATE KEYS ]====="
$DOCKER_COMPOSE run --rm healthauthority_api /src/console security:create-key-exchange-secret-key
$DOCKER_COMPOSE run --rm healthauthority_api /src/console security:create-store-secret-key

echo
echo "=====[ FILL REDIS CACHE ]====="
$DOCKER_COMPOSE run --rm worker /src/worker questionnaire:refresh-all
$DOCKER_COMPOSE run --rm worker /src/worker task:refresh-general
$DOCKER_COMPOSE run --rm healthauthority_api /src/console security:cache-keys
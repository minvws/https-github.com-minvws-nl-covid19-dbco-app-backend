#!/bin/bash
BASE_PATH=$(dirname $0)/..

. $BASE_PATH/.env.test

PROJECT_NAME=dbco-test

DOCKER_COMPOSE="docker-compose --project-directory=$BASE_PATH -p $PROJECT_NAME --env-file .env.test -f docker-compose/docker-compose.main.yml -f docker-compose/docker-compose.test.yml"
DOCKER_COMPOSE_TOOLS="$DOCKER_COMPOSE -f docker-compose/docker-compose.tools.test.yml"
DOCKER_COMPOSE_SETUP="$DOCKER_COMPOSE -f docker-compose/docker-compose.setup.yml"
DOCKER_COMPOSE_SETUP_AND_TOOLS="$DOCKER_COMPOSE_SETUP -f docker-compose/docker-compose.tools.dev.yml"

CONTAINER=$1
PHPUNIT_ARGS="${@:2}"

if [ "$1" == "--reset" ]; then
  CONTAINER=$2
  PHPUNIT_ARGS="${@:3}"

  echo "=====[ RESET ]====="
  $DOCKER_COMPOSE down --remove-orphans -v
  $DOCKER_COMPOSE_SETUP_AND_TOOLS build
  echo
fi

if [ "$1" == "--setup" ] || [ "$1" == "--reset" ]; then
  echo "=====[ SETUP HSM ]======================="
  $DOCKER_COMPOSE up -d hsm
  sleep 5
  $DOCKER_COMPOSE_SETUP run --rm hsm-setup
fi

echo "=====[ START CONTAINERS ]====="
$DOCKER_COMPOSE up -d

echo
echo "=====[ START MYSQL DATABASE ]========================="
echo "Waiting for MYSQL to launch on ${MYSQL_PORT:-3306}..."
while ! echo "SELECT 1" | $DOCKER_COMPOSE_TOOLS run --rm mysqlclient > /dev/null 2>&1; do
  sleep 0.5
done

if [ "$1" == "--keep-alive" ]; then
  CONTAINER=$2
  PHPUNIT_ARGS="${@:3}"
fi

if [ "$1" == "--setup" ] || [ "$1" == "--reset" ]; then
  sleep 10

  CONTAINER=$2
  PHPUNIT_ARGS="${@:3}"

  echo
  echo "=====[ SETUP MYSQL DATABASE ]========================="
  $DOCKER_COMPOSE_TOOLS run --rm mysqlclient -e "CREATE USER 'portal'@'%' IDENTIFIED BY '$PORTAL_DB_PASSWORD'"
  $DOCKER_COMPOSE_TOOLS run --rm mysqlclient -e "CREATE USER 'healthauthority_api'@'%' IDENTIFIED BY '$HEALTHAUTHORITY_API_DB_PASSWORD'"
  $DOCKER_COMPOSE_TOOLS run --rm mysqlclient < $BASE_PATH/services/mysql/permissions.sql
fi

if [ -z "$CONTAINER" ] || [ "$CONTAINER" == "healthauthority-api" ] || [ "$CONTAINER" == "portal" ]; then
  echo
  echo "=====[ RUN MIGRATIONS ]====="
  $DOCKER_COMPOSE run --rm --entrypoint php portal artisan migrate
fi

if [ -z "$CONTAINER" ] || [ "$CONTAINER" == "worker" ]; then
  echo
  echo "=====[ RUN TESTS FOR WORKER ]====="
  $DOCKER_COMPOSE_TOOLS run --rm --entrypoint=/src/vendor/bin/phpunit worker "$PHPUNIT_ARGS"
fi

if [ -z "$CONTAINER" ] || [ "$CONTAINER" == "private-api" ]; then
  echo
  echo "=====[ RUN TESTS FOR PRIVATE API ]====="
  $DOCKER_COMPOSE run --rm --entrypoint=/src/vendor/bin/phpunit private-api $PHPUNIT_ARGS
fi

if [ -z "$CONTAINER" ] || [ "$CONTAINER" == "public-api" ]; then
  echo
  echo "=====[ RUN TESTS FOR PUBLIC API ]====="
  $DOCKER_COMPOSE run --rm --entrypoint=/src/vendor/bin/phpunit public-api $PHPUNIT_ARGS
fi

if [ -z "$CONTAINER" ] || [ "$CONTAINER" == "healthauthority-api" ]; then
  echo
  echo "=====[ RUN TESTS FOR HEALTHAUTHORITY API ]====="
  $DOCKER_COMPOSE run --rm --entrypoint=/src/vendor/bin/phpunit healthauthority-api $PHPUNIT_ARGS
fi

if [ -z "$CONTAINER" ] || [ "$CONTAINER" == "portal" ]; then
  echo
  echo "=====[ RUN TESTS FOR PORTAL ]====="
  $DOCKER_COMPOSE run --rm --entrypoint=/src/vendor/bin/phpunit portal $PHPUNIT_ARGS
fi

if [ "$1" != "--keep-alive" ]; then
  echo
  echo "=====[ STOP CONTAINERS ]====="
  $DOCKER_COMPOSE stop
fi

secrets:
    composer_auth:
        file: ./auth.json

volumes:
    mysql-data:
        driver: local
    phpstan:

services:
    # Redis Sluice Persistent
    redis-sp:
        extends:
            file: docker-compose/common.yml
            service: redis-sp

    # Redis Health Authority Volatile
    redis-hav:
        extends:
            file: docker-compose/common.yml
            service: redis-hav

    # Redis Health Authority Persistent
    redis-hap:
        extends:
            file: docker-compose/common.yml
            service: redis-hap

    mysql:
        extends:
            file: docker-compose/common.yml
            service: mysql
        ports:
            - ${MYSQL_PORT:-3306}:3306

    rabbitmq:
        extends:
            file: docker-compose/common.yml
            service: rabbitmq
        ports:
            - ${RABBITMQ_PORT:-5672}:5672
            - ${RABBITMQ_MANAGEMENT_PORT:-15673}:15672

    portal:
        platform: linux/amd64
        extends:
            file: docker-compose/common.yml
            service: portal
        depends_on:
            - mysql
            - redis-hav
            - redis-hap
            - rabbitmq
        build:
            target: base
            args:
                - DEV=1
            secrets:
                - composer_auth
        environment:
            - PHP_OPCACHE_VALIDATE_TIMESTAMPS=1
        ports:
            - ${PORTAL_PORT:-8084}:8080
        volumes:
            - ./services/portal/src:/src
            - ./services/shared/library:/shared/library
            - ./services/shared/packages:/shared/packages
            - ./services/shared/resources:/shared/resources
            - ./services/portal/assets/supervisord:/etc/supervisor
            - phpstan:/tmp/phpstan

    default-worker:
        extends:
            file: docker-compose/common.yml
            service: default-worker
        depends_on:
            - mysql
            - redis-hav
            - redis-hap
            - rabbitmq
        environment:
            - PHP_OPCACHE_VALIDATE_TIMESTAMPS=1
        volumes:
            - ./services/portal/src:/src
            - ./services/shared/packages/dbco-enum/output/ts:/src/resources/js/types/enums
            - ./services/shared/library:/shared/library
            - ./services/shared/packages:/shared/packages
            - ./services/shared/resources:/shared/resources
        command: ["sh", "-c", "trap : 3 15 ; wait-for-it rabbitmq:${RABBITMQ_PORT:-5672} --timeout=0 --strict -- php artisan queue:listen --sleep=10 && wait"]
        build:
            secrets:
                - composer_auth

    gateway:
        extends:
            file: docker-compose/common.yml
            service: gateway
        depends_on:
            - rabbitmq
            - redis-hap
        build:
            args:
                - DEV=1
            secrets:
                - composer_auth
        ports:
            - ${GATEWAY_PORT:-8085}:8080
        volumes:
            - ./services/gateway/src:/src
            - ./services/shared/packages:/shared/packages:cached
            - ./services/shared/library:/shared/library:cached

    sftp:
        extends:
            file: docker-compose/common.yml
            service: sftp
        volumes:
            - ./metrics/sftp:/home/sftp/upload
            - type: bind
              source: ./sftp_id_rsa.pub
              target: /home/sftp/.ssh/keys/id_rsa.pub
              read_only: true

    smtp:
        image: mailhog/mailhog
        ports:
            - ${MAILHOG_PORT-8025}:8025

    # Load testing
    locust:
        build:
            context: ./services
            dockerfile: locust/Dockerfile
        ports:
            - ${LOCUST_PORT:-8089}:8089
        environment:
            GATEWAY_JWT_SECRET: ${GATEWAY_JWT_SECRET}
            USE_HEADER: ${LOCUST_EXPORT_API_USE_HEADER_AUTH:-true}
            GGD_IDENTIFIER_ITERATION_ENABLED: ${LOCUST_GGD_IDENTIFIER_ITERATION_ENABLED:-false}
            DEBUG_MODE: ${LOCUST_DEBUG_MODE-False}
            CN_NAME: ${LOCUST_CN_NAME:-""}
            PORTAL_HOST: ${LOCUST_PORTAL_HOST:-http://portal:8080}
            LOCUST_CERT_FILE_NAME: ${LOCUST_CERT_FILE_NAME:-""}
            LOCUST_CERT_KEY_FILE_NAME: ${LOCUST_CERT_KEY_FILE_NAME:-""}

        volumes:
            - ./services/locust:/mnt/locust
        command: -f /mnt/locust/ --class-picker

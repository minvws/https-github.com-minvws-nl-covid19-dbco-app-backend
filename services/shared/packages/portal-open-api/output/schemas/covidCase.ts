/**
 * Generated by orval v6.13.1 üç∫
 * Do not edit manually.
 * DBCO Portal
 * API used for the portal for healthcare (BCO) workers
 * OpenAPI spec version: 1.0.0
 */
import type { CovidCaseHpzoneNumber } from './covidCaseHpzoneNumber';
import type { CovidCaseTestMonsterNumber } from './covidCaseTestMonsterNumber';
import type { CovidCaseDateOfTest } from './covidCaseDateOfTest';
import type { CovidCaseDateOfSymptomOnset } from './covidCaseDateOfSymptomOnset';
import type { StatusIndexContactTracing } from './statusIndexContactTracing';
import type { CovidCaseOrganisationProperty } from './covidCaseOrganisationProperty';
import type { CovidCaseAssignedOrganisation } from './covidCaseAssignedOrganisation';
import type { CovidCaseAssignedCaseList } from './covidCaseAssignedCaseList';
import type { CovidCaseAssignedUser } from './covidCaseAssignedUser';
import type { CovidCaseIsApproved } from './covidCaseIsApproved';
import type { CovidCaseLabel } from './covidCaseLabel';
import type { PlannerView } from './plannerView';
import type { BCOStatus } from './bCOStatus';
import type { BCOPhase } from './bCOPhase';
import type { CovidCaseWasOutsourcedToOrganisation } from './covidCaseWasOutsourcedToOrganisation';
import type { CovidCaseLastAssignedUserName } from './covidCaseLastAssignedUserName';
import type { Priority } from './priority';
import type { CovidCaseCaseLabel } from './covidCaseCaseLabel';
import type { TestResultSource } from './testResultSource';
import type { CovidCaseAge } from './covidCaseAge';
import type { CovidCaseVaccinationCount } from './covidCaseVaccinationCount';
import type { CovidCaseMostRecentVaccinationDate } from './covidCaseMostRecentVaccinationDate';

export interface CovidCase {
  uuid: string;
  caseId: string;
  hpzoneNumber: CovidCaseHpzoneNumber;
  testMonsterNumber: CovidCaseTestMonsterNumber;
  contactsCount: number;
  dateOfBirth: string;
  dateOfTest: CovidCaseDateOfTest;
  dateOfSymptomOnset: CovidCaseDateOfSymptomOnset;
  statusIndexContactTracing: StatusIndexContactTracing;
  statusExplanation: string;
  createdAt: string;
  updatedAt: string;
  organisation: CovidCaseOrganisationProperty;
  assignedOrganisation: CovidCaseAssignedOrganisation;
  assignedCaseList: CovidCaseAssignedCaseList;
  assignedUser: CovidCaseAssignedUser;
  isEditable: boolean;
  isDeletable: boolean;
  isClosable: boolean;
  isReopenable: boolean;
  isAssignable: boolean;
  canChangeOrganisation: boolean;
  isApproved: CovidCaseIsApproved;
  label: CovidCaseLabel;
  plannerView: PlannerView;
  bcoStatus: BCOStatus;
  bcoPhase: BCOPhase;
  wasOutsourced: boolean;
  wasOutsourcedToOrganisation: CovidCaseWasOutsourcedToOrganisation;
  lastAssignedUserName: CovidCaseLastAssignedUserName;
  priority: Priority;
  caseLabels: CovidCaseCaseLabel[];
  hasNotes?: boolean;
  testResults: TestResultSource[];
  age: CovidCaseAge;
  vaccinationCount: CovidCaseVaccinationCount;
  mostRecentVaccinationDate: CovidCaseMostRecentVaccinationDate;
}

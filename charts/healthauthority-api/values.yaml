# Default values for public-api

replicaCount: 1

image:
  repository: ghcr.io/minvws/nl-covid19-dbco-app-backend-private/healthauthority-api
  tag: 0.2.1
  pullPolicy: IfNotPresent

imagePullSecrets:

service:
  enabled: true
  type: ClusterIP
  httpPort: 8080
  externalPort: 8080

# metrics-server add-on required
hpa:
  enabled: false
  maxReplicas: 10
  # average total CPU usage per pod (1-100)
  cpu:
  # average memory usage per pod (100Mi-1Gi)
  memory:
  # average http requests per second per pod (k8s-prometheus-adapter)
  requests:

# App
app:
  env: production

# Redis
redis:
  host:
  port: 6379
  sentinel:
    service:

# Database
db:
  type: mysql
  host: mysql
  database: portal
  username: mysql
  password: changeme
  useExistingSecret: false # if true, create a secret with `app.fullname-db` in the same namespace

# Encryption
security:
  module:
    type: hsm
    hsm:
      useExistingSecret: false
      slot:
        label: slot1
      user:
        pin: changeme
      pkcs11: |
        [Global]
        Logging = 0

        KeysExternal = false
        # KeyStore = /data/utimaco/slot1.pks

        SlotMultiSession = true
        SlotCount = 30
        KeepLeadZeros = false

        FallbackInterval = 0

        [CryptoServer]
        Device = { hsm }

        CommandTimeout = 300000
        ConnectionTimeout = 60000
        KeepAlive = true

# Private JWT
private:
  api:
    base_uri: http://private-api:8080/v1/
    jwt:
      useExistingSecret: false # if true, create a secret with `app.fullname`-jwt in the same namespace
      secret: changeme

# Apache
apache:
  run:
    user: "www-data"
    group: "www-data"

# Debug
debug: 0

serviceAccount:
  # Specifies whether a service account should be created
  enabled: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

serviceMonitor:
  enabled: false
  interval: 15s

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /*
  hosts: []
#    - public-api.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
  requests:
    cpu: 1m
    memory: 16Mi

securityContext:
  runAsNonRoot: true
  runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}

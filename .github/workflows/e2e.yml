name: e2e

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  kind-helm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Kubectl
        uses: azure/setup-kubectl@v1
      - name: Setup Kubectl
        uses: azure/setup-helm@v1
      - name: Validate Helm charts
        run: |
          KUBEVAL=0.15.0
          curl -sL https://github.com/instrumenta/kubeval/releases/download/${KUBEVAL}/kubeval-linux-amd64.tar.gz | tar xz
          ./kubeval --version
          helm template ./charts/public-api | ./kubeval --strict
          helm template ./charts/private-api | ./kubeval --strict
          helm template ./charts/healthauthority-api | ./kubeval --strict
          helm template ./charts/portal | ./kubeval --strict
          helm template ./charts/bridge | ./kubeval --strict
      - name: Setup Kubernetes
        uses: engineerd/setup-kind@v0.5.0
      - name: Build container image
        run: |
          docker build -t test/public-api:latest -f api/Dockerfile-public api/
          docker build -t test/private-api:latest -f api/Dockerfile-private api/
          docker build -t test/healthauthority-api:latest -f api/Dockerfile-healthauthority api/
          docker build -t test/portal:latest -f portal/Dockerfile portal/
          docker build -t test/bridge:latest -f bridge/Dockerfile bridge/
          kind load docker-image test/public-api:latest
          kind load docker-image test/private-api:latest
          kind load docker-image test/healthauthority-api:latest
          kind load docker-image test/portal:latest
          kind load docker-image test/bridge:latest
      - name: Add Helm Repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
      - name: Deploy Helm Charts
        run: |
          helm upgrade -i redis bitnami/redis \
          --set usePassword=false \
          --wait
          helm upgrade -i mysql bitnami/mysql \
          --set db.user=dbco \
          --set db.password=changeme \
          --set db.name=dbco \
          --set root.password=changeme \
          --set replication.enabled=false \
          --set master.persistence.enabled=false \
          --wait
          helm upgrade -i public-api ./charts/public-api \
          --set image.repository=test/public-api \
          --set image.tag=latest \
          --set redis.host=redis-master \
          --namespace=default
          helm upgrade -i private-api ./charts/private-api \
          --set image.repository=test/private-api \
          --set image.tag=latest \
          --set redis.host=redis-master \
          --namespace=default
          helm upgrade -i healthauthority-api ./charts/healthauthority-api \
          --set image.repository=test/healthauthority-api \
          --set image.tag=latest \
          --set redis.host=redis-master \
          --set db.type=mysql \
          --set db.host=mysql \
          --set db.database=dbco \
          --set db.username=dbco \
          --set db.password=changeme \
          --namespace=default
          helm upgrade -i portal ./charts/portal \
          --set image.repository=test/portal \
          --set image.tag=latest \
          --set redis.host=redis-master \
          --set db.type=mysql \
          --set db.host=mysql \
          --set db.database=dbco \
          --set db.username=dbco \
          --set db.password=changeme \
          --namespace=default
          helm upgrade -i bridge-clients ./charts/bridge \
          --set image.repository=test/bridge \
          --set image.tag=latest \
          --set redis.host=redis-master \
          --set bridge.args='["process:clients"]' \
          --namespace=default
          helm upgrade -i bridge-caseresults ./charts/bridge \
          --set image.repository=test/bridge \
          --set image.tag=latest \
          --set redis.host=redis-master \
          --set bridge.args='["process:caseresults"]' \
          --namespace=default
      - name: Run integration tests
        run: |
          kubectl rollout status deployment/public-api --timeout=1m
          kubectl rollout status deployment/private-api --timeout=1m
          kubectl rollout status deployment/healthauthority-api --timeout=1m
          # kubectl rollout status deployment/portal --timeout=1m
          kubectl rollout status deployment/bridge-clients --timeout=1m
          kubectl rollout status deployment/bridge-caseresults --timeout=1m
name: CI

on: [pull_request]

env:
  POSTGRES_PASSWORD: ${{ secrets.CI_SERVICE_PASSWORD }}
  PRIVATE_API_JWT_SECRET: ${{ secrets.CI_SERVICE_PASSWORD }}
  HEALTHAUTHORITY_API_DB_PASSWORD: ${{ secrets.CI_SERVICE_PASSWORD }}
  PORTAL_DB_PASSWORD: ${{ secrets.CI_SERVICE_PASSWORD }}
  PORTAL_APP_KEY: ${{ secrets.CI_SERVICE_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Build / start the stack
        run: docker-compose --env-file ./.env.ci -p test -f docker-compose.main.yml -f docker-compose.ci.yml -f docker-compose.postgres.yml up -d

      - name: Worker - Run phpunit
        run: |
          docker-compose --env-file ./.env.ci -p test -f docker-compose.main.yml -f docker-compose.ci.yml -f docker-compose.postgres.yml run --rm --entrypoint=/src/vendor/bin/phpunit worker

      - name: Private Api - Run phpunit
        run: |
          docker-compose --env-file ./.env.ci -p test -f docker-compose.main.yml -f docker-compose.ci.yml -f docker-compose.postgres.yml run --rm --entrypoint=/src/vendor/bin/phpunit private_api

      - name: Public Api - Run phpunit
        run: |
          docker-compose --env-file ./.env.ci -p test -f docker-compose.main.yml -f docker-compose.ci.yml -f docker-compose.postgres.yml run --rm --entrypoint=/src/vendor/bin/phpunit public_api

      - name: Health Authority Api - Run phpunit
        run: |
          docker-compose --env-file ./.env.ci -p test -f docker-compose.main.yml -f docker-compose.ci.yml -f docker-compose.postgres.yml run --rm --entrypoint=/src/vendor/bin/phpunit healthauthority_api
